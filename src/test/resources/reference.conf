custom-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 2
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 2.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 10
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}

redis {
  host = 127.0.0.1
  host = ${?HOSTNAME}
  port = 6379
}

redisson-red-lock-lease {
  lease-class = "com.nikolastojiljkovic.akka.coordination.lease.RedissonRedLockLease"
  heartbeat-timeout = 60s
  heartbeat-interval = 20s
  lease-operation-timeout = 3s

  dispatcher = custom-dispatcher
  default-server {
    singleServerConfig {
      connectionMinimumIdleSize = 2
      connectionPoolSize = 2
    }
    threads = 2
    nettyThreads = 2
    transportMode = NIO
  }
  servers = [
    ${redisson-red-lock-lease.default-server} {singleServerConfig.address = "redis://"${redis.host}":"${redis.port}}
  ]
}

redisson-red-lock-lease-with-custom-min-lease {
  lease-class = "com.nikolastojiljkovic.akka.coordination.lease.RedissonRedLockLease"
  heartbeat-timeout = 60s
  heartbeat-interval = 20s
  lease-operation-timeout = 3s
  min-locks-amount = 2

  default-server {
    singleServerConfig {
      connectionMinimumIdleSize = 1
      connectionPoolSize = 1
    }
  }
  servers = [
    ${redisson-red-lock-lease-with-custom-min-lease.default-server} {singleServerConfig.address = "redis://"${redis.host}":"${redis.port}}
  ]
}